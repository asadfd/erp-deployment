{"ast":null,"code":"import _objectSpread from\"/mnt/c/Users/Asad Dimtimkar/IdeaProjects/ERPcustom/src/main/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProjectExpenseSummary=_ref=>{let{projectId}=_ref;const[expenseData,setExpenseData]=useState(null);const[project,setProject]=useState(null);const[dailyStats,setDailyStats]=useState([]);const[loading,setLoading]=useState(false);useEffect(()=>{if(projectId){fetchExpenseData();}},[projectId]);const fetchExpenseData=async()=>{setLoading(true);try{await Promise.all([fetchProjectDetails(),fetchProjectExpense(),fetchDailyStatistics()]);}catch(error){console.error('Error fetching expense data:',error);}finally{setLoading(false);}};const fetchProjectDetails=async()=>{try{const response=await fetch(\"/api/projects/\".concat(projectId),{credentials:'include'});if(response.ok){const data=await response.json();setProject(data);}}catch(error){console.error('Error fetching project details:',error);}};const fetchProjectExpense=async()=>{try{const response=await fetch(\"/api/projects/\".concat(projectId,\"/expense\"),{credentials:'include'});if(response.ok){const totalExpense=await response.json();setExpenseData({totalExpense});}}catch(error){console.error('Error fetching project expense:',error);}};const fetchDailyStatistics=async()=>{if(!project)return;try{const start=new Date(project.startDate||Date.now());const end=new Date(project.endDate||Date.now());const today=new Date();const actualEnd=end>today?today:end;const stats=[];for(let date=new Date(start);date<=actualEnd;date.setDate(date.getDate()+1)){const dateStr=date.toISOString().split('T')[0];const response=await fetch(\"/api/projects/\".concat(projectId,\"/stats/date/\").concat(dateStr),{credentials:'include'});if(response.ok){const dailyStat=await response.json();if(dailyStat.employeeCount>0||dailyStat.totalHours>0){stats.push(dailyStat);}}}setDailyStats(stats);}catch(error){console.error('Error fetching daily statistics:',error);}};const calculateDailyExpense=(date,employeeCount,totalHours)=>{if(!project)return 0;if(project.perHourRate&&totalHours){return totalHours*project.perHourRate;}if(project.perDayRate&&employeeCount){return employeeCount*project.perDayRate;}return 0;};const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:2}).format(amount||0);};const formatDate=dateStr=>{return new Date(dateStr).toLocaleDateString('en-US',{weekday:'short',year:'numeric',month:'short',day:'numeric'});};const containerStyle={padding:'20px',background:'white',borderRadius:'8px',boxShadow:'0 2px 4px rgba(0, 0, 0, 0.1)',marginBottom:'20px'};const titleStyle={margin:'0 0 20px 0',color:'#333',borderBottom:'2px solid #007bff',paddingBottom:'10px'};const loadingStyle={textAlign:'center',color:'#6c757d',fontStyle:'italic',padding:'40px'};const noDataStyle={textAlign:'center',color:'#6c757d',fontStyle:'italic',padding:'40px',background:'#f8f9fa',borderRadius:'8px'};if(loading){return/*#__PURE__*/_jsxs(\"div\",{style:containerStyle,children:[/*#__PURE__*/_jsx(\"h4\",{style:titleStyle,children:\"Project Expense Summary\"}),/*#__PURE__*/_jsx(\"div\",{style:loadingStyle,children:\"Loading expense data...\"})]});}if(!project||!expenseData){return/*#__PURE__*/_jsxs(\"div\",{style:containerStyle,children:[/*#__PURE__*/_jsx(\"h4\",{style:titleStyle,children:\"Project Expense Summary\"}),/*#__PURE__*/_jsx(\"div\",{style:noDataStyle,children:\"No expense data available\"})]});}const totalDailyExpenses=dailyStats.reduce((total,stat)=>{return total+calculateDailyExpense(stat.date,stat.employeeCount,stat.totalHours);},0);const summaryCardsStyle={display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(250px, 1fr))',gap:'20px',marginBottom:'30px'};const summaryCardStyle={background:'#f8f9fa',padding:'20px',borderRadius:'8px',border:'1px solid #e9ecef',boxShadow:'0 2px 4px rgba(0, 0, 0, 0.05)'};const cardHeaderStyle={marginBottom:'15px'};const cardTitleStyle={margin:'0',color:'#333',fontSize:'16px',fontWeight:'bold'};const cardValueStyle={fontSize:'24px',fontWeight:'bold',color:'#007bff',marginBottom:'10px'};const cardSubtitleStyle={color:'#6c757d',fontSize:'14px',margin:'0'};return/*#__PURE__*/_jsxs(\"div\",{style:containerStyle,children:[/*#__PURE__*/_jsx(\"h4\",{style:titleStyle,children:\"Project Expense Summary\"}),/*#__PURE__*/_jsxs(\"div\",{style:summaryCardsStyle,children:[/*#__PURE__*/_jsxs(\"div\",{style:summaryCardStyle,children:[/*#__PURE__*/_jsx(\"div\",{style:cardHeaderStyle,children:/*#__PURE__*/_jsx(\"h5\",{style:cardTitleStyle,children:\"Project Budget\"})}),/*#__PURE__*/_jsx(\"div\",{style:cardValueStyle,children:formatCurrency(project.projectBudget)}),/*#__PURE__*/_jsx(\"div\",{style:cardSubtitleStyle,children:\"Total Allocated Budget\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:summaryCardStyle,children:[/*#__PURE__*/_jsx(\"div\",{style:cardHeaderStyle,children:/*#__PURE__*/_jsx(\"h5\",{style:cardTitleStyle,children:\"Total Expenses\"})}),/*#__PURE__*/_jsx(\"div\",{style:_objectSpread(_objectSpread({},cardValueStyle),{},{color:'#dc3545'}),children:formatCurrency(expenseData.totalExpense)}),/*#__PURE__*/_jsx(\"div\",{style:cardSubtitleStyle,children:\"Actual Expenses Incurred\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:summaryCardStyle,children:[/*#__PURE__*/_jsx(\"div\",{style:cardHeaderStyle,children:/*#__PURE__*/_jsx(\"h5\",{style:cardTitleStyle,children:\"Remaining Budget\"})}),/*#__PURE__*/_jsx(\"div\",{style:_objectSpread(_objectSpread({},cardValueStyle),{},{color:'#28a745'}),children:formatCurrency((project.projectBudget||0)-(expenseData.totalExpense||0))}),/*#__PURE__*/_jsx(\"div\",{style:cardSubtitleStyle,children:project.projectBudget?\"\".concat(((project.projectBudget-expenseData.totalExpense)/project.projectBudget*100).toFixed(1),\"% remaining\"):'No budget set'})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#f8f9fa',padding:'20px',borderRadius:'8px',marginBottom:'30px',borderLeft:'4px solid #17a2b8'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{margin:'0 0 15px 0',color:'#333'},children:\"Rate Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'10px'},children:[project.perHourRate&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#333',fontWeight:'500'},children:\"Hourly Rate:\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#007bff',fontWeight:'bold'},children:formatCurrency(project.perHourRate)})]}),project.perDayRate&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#333',fontWeight:'500'},children:\"Daily Rate:\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#007bff',fontWeight:'bold'},children:formatCurrency(project.perDayRate)})]})]})]}),dailyStats.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'30px'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{margin:'0 0 15px 0',color:'#333'},children:\"Daily Work & Expense Breakdown\"}),/*#__PURE__*/_jsx(\"div\",{style:{border:'1px solid #ddd',borderRadius:'8px',overflow:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{style:{overflowX:'auto'},children:/*#__PURE__*/_jsxs(\"table\",{style:{width:'100%',borderCollapse:'collapse',minWidth:'600px'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{background:'#343a40',color:'white',padding:'12px',border:'1px solid #ddd',textAlign:'left'},children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{style:{background:'#343a40',color:'white',padding:'12px',border:'1px solid #ddd',textAlign:'center'},children:\"Employees\"}),/*#__PURE__*/_jsx(\"th\",{style:{background:'#343a40',color:'white',padding:'12px',border:'1px solid #ddd',textAlign:'center'},children:\"Total Hours\"}),/*#__PURE__*/_jsx(\"th\",{style:{background:'#343a40',color:'white',padding:'12px',border:'1px solid #ddd',textAlign:'center'},children:\"Daily Expense\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:dailyStats.map((stat,index)=>{const dailyExpense=calculateDailyExpense(stat.date,stat.employeeCount,stat.totalHours);return/*#__PURE__*/_jsxs(\"tr\",{style:{backgroundColor:index%2===0?'white':'#f8f9fa'},children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:'12px',border:'1px solid #ddd'},children:formatDate(stat.date)}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'12px',border:'1px solid #ddd',textAlign:'center'},children:stat.employeeCount}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'12px',border:'1px solid #ddd',textAlign:'center'},children:stat.totalHours?stat.totalHours.toFixed(1):'0.0'}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'12px',border:'1px solid #ddd',textAlign:'center',fontWeight:'bold',color:'#007bff'},children:formatCurrency(dailyExpense)})]},index);})}),/*#__PURE__*/_jsx(\"tfoot\",{children:/*#__PURE__*/_jsxs(\"tr\",{style:{backgroundColor:'#d4edda'},children:[/*#__PURE__*/_jsx(\"th\",{style:{padding:'12px',border:'1px solid #ddd',color:'#155724',fontWeight:'bold'},children:\"Totals\"}),/*#__PURE__*/_jsxs(\"th\",{style:{padding:'12px',border:'1px solid #ddd',color:'#155724',fontWeight:'bold',textAlign:'center'},children:[dailyStats.reduce((sum,stat)=>sum+(stat.employeeCount||0),0),\" total work days\"]}),/*#__PURE__*/_jsx(\"th\",{style:{padding:'12px',border:'1px solid #ddd',color:'#155724',fontWeight:'bold',textAlign:'center'},children:dailyStats.reduce((sum,stat)=>sum+(stat.totalHours||0),0).toFixed(1)}),/*#__PURE__*/_jsx(\"th\",{style:{padding:'12px',border:'1px solid #ddd',color:'#155724',fontWeight:'bold',textAlign:'center',fontSize:'16px'},children:formatCurrency(totalDailyExpenses)})]})})]})})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#fff3cd',padding:'20px',borderRadius:'8px',borderLeft:'4px solid #ffc107'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{margin:'0 0 15px 0',color:'#856404'},children:\"Calculation Notes\"}),/*#__PURE__*/_jsxs(\"ul\",{style:{margin:'0',paddingLeft:'20px',color:'#856404'},children:[/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:'8px'},children:\"Expenses are calculated based on actual hours worked and configured rates\"}),/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:'8px'},children:\"If hourly rate is set, expense = hours \\xD7 hourly rate\"}),/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:'8px'},children:\"If only daily rate is set, expense = employees working \\xD7 daily rate\"}),/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:'0'},children:\"Budget tracking shows remaining allocation vs actual expenses\"})]})]})]});};export default ProjectExpenseSummary;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ProjectExpenseSummary","_ref","projectId","expenseData","setExpenseData","project","setProject","dailyStats","setDailyStats","loading","setLoading","fetchExpenseData","Promise","all","fetchProjectDetails","fetchProjectExpense","fetchDailyStatistics","error","console","response","fetch","concat","credentials","ok","data","json","totalExpense","start","Date","startDate","now","end","endDate","today","actualEnd","stats","date","setDate","getDate","dateStr","toISOString","split","dailyStat","employeeCount","totalHours","push","calculateDailyExpense","perHourRate","perDayRate","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatDate","toLocaleDateString","weekday","year","month","day","containerStyle","padding","background","borderRadius","boxShadow","marginBottom","titleStyle","margin","color","borderBottom","paddingBottom","loadingStyle","textAlign","fontStyle","noDataStyle","children","totalDailyExpenses","reduce","total","stat","summaryCardsStyle","display","gridTemplateColumns","gap","summaryCardStyle","border","cardHeaderStyle","cardTitleStyle","fontSize","fontWeight","cardValueStyle","cardSubtitleStyle","projectBudget","_objectSpread","toFixed","borderLeft","flexDirection","justifyContent","alignItems","length","overflow","overflowX","width","borderCollapse","minWidth","map","index","dailyExpense","backgroundColor","sum","paddingLeft"],"sources":["/mnt/c/Users/Asad Dimtimkar/IdeaProjects/ERPcustom/src/main/frontend/src/components/ProjectExpenseSummary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ProjectExpenseSummary = ({ projectId }) => {\n    const [expenseData, setExpenseData] = useState(null);\n    const [project, setProject] = useState(null);\n    const [dailyStats, setDailyStats] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (projectId) {\n            fetchExpenseData();\n        }\n    }, [projectId]);\n\n    const fetchExpenseData = async () => {\n        setLoading(true);\n        try {\n            await Promise.all([\n                fetchProjectDetails(),\n                fetchProjectExpense(),\n                fetchDailyStatistics()\n            ]);\n        } catch (error) {\n            console.error('Error fetching expense data:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const fetchProjectDetails = async () => {\n        try {\n            const response = await fetch(`/api/projects/${projectId}`, {\n                credentials: 'include'\n            });\n            if (response.ok) {\n                const data = await response.json();\n                setProject(data);\n            }\n        } catch (error) {\n            console.error('Error fetching project details:', error);\n        }\n    };\n\n    const fetchProjectExpense = async () => {\n        try {\n            const response = await fetch(`/api/projects/${projectId}/expense`, {\n                credentials: 'include'\n            });\n            if (response.ok) {\n                const totalExpense = await response.json();\n                setExpenseData({ totalExpense });\n            }\n        } catch (error) {\n            console.error('Error fetching project expense:', error);\n        }\n    };\n\n    const fetchDailyStatistics = async () => {\n        if (!project) return;\n        \n        try {\n            const start = new Date(project.startDate || Date.now());\n            const end = new Date(project.endDate || Date.now());\n            const today = new Date();\n            const actualEnd = end > today ? today : end;\n            \n            const stats = [];\n            for (let date = new Date(start); date <= actualEnd; date.setDate(date.getDate() + 1)) {\n                const dateStr = date.toISOString().split('T')[0];\n                const response = await fetch(`/api/projects/${projectId}/stats/date/${dateStr}`, {\n                    credentials: 'include'\n                });\n                \n                if (response.ok) {\n                    const dailyStat = await response.json();\n                    if (dailyStat.employeeCount > 0 || dailyStat.totalHours > 0) {\n                        stats.push(dailyStat);\n                    }\n                }\n            }\n            \n            setDailyStats(stats);\n        } catch (error) {\n            console.error('Error fetching daily statistics:', error);\n        }\n    };\n\n    const calculateDailyExpense = (date, employeeCount, totalHours) => {\n        if (!project) return 0;\n        \n        if (project.perHourRate && totalHours) {\n            return totalHours * project.perHourRate;\n        }\n        \n        if (project.perDayRate && employeeCount) {\n            return employeeCount * project.perDayRate;\n        }\n        \n        return 0;\n    };\n\n    const formatCurrency = (amount) => {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 2\n        }).format(amount || 0);\n    };\n\n    const formatDate = (dateStr) => {\n        return new Date(dateStr).toLocaleDateString('en-US', {\n            weekday: 'short',\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric'\n        });\n    };\n\n    const containerStyle = {\n        padding: '20px',\n        background: 'white',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        marginBottom: '20px'\n    };\n\n    const titleStyle = {\n        margin: '0 0 20px 0',\n        color: '#333',\n        borderBottom: '2px solid #007bff',\n        paddingBottom: '10px'\n    };\n\n    const loadingStyle = {\n        textAlign: 'center',\n        color: '#6c757d',\n        fontStyle: 'italic',\n        padding: '40px'\n    };\n\n    const noDataStyle = {\n        textAlign: 'center',\n        color: '#6c757d',\n        fontStyle: 'italic',\n        padding: '40px',\n        background: '#f8f9fa',\n        borderRadius: '8px'\n    };\n\n    if (loading) {\n        return (\n            <div style={containerStyle}>\n                <h4 style={titleStyle}>Project Expense Summary</h4>\n                <div style={loadingStyle}>Loading expense data...</div>\n            </div>\n        );\n    }\n\n    if (!project || !expenseData) {\n        return (\n            <div style={containerStyle}>\n                <h4 style={titleStyle}>Project Expense Summary</h4>\n                <div style={noDataStyle}>No expense data available</div>\n            </div>\n        );\n    }\n\n    const totalDailyExpenses = dailyStats.reduce((total, stat) => {\n        return total + calculateDailyExpense(stat.date, stat.employeeCount, stat.totalHours);\n    }, 0);\n\n    const summaryCardsStyle = {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n        gap: '20px',\n        marginBottom: '30px'\n    };\n\n    const summaryCardStyle = {\n        background: '#f8f9fa',\n        padding: '20px',\n        borderRadius: '8px',\n        border: '1px solid #e9ecef',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)'\n    };\n\n    const cardHeaderStyle = {\n        marginBottom: '15px'\n    };\n\n    const cardTitleStyle = {\n        margin: '0',\n        color: '#333',\n        fontSize: '16px',\n        fontWeight: 'bold'\n    };\n\n    const cardValueStyle = {\n        fontSize: '24px',\n        fontWeight: 'bold',\n        color: '#007bff',\n        marginBottom: '10px'\n    };\n\n    const cardSubtitleStyle = {\n        color: '#6c757d',\n        fontSize: '14px',\n        margin: '0'\n    };\n\n    return (\n        <div style={containerStyle}>\n            <h4 style={titleStyle}>Project Expense Summary</h4>\n            \n            <div style={summaryCardsStyle}>\n                <div style={summaryCardStyle}>\n                    <div style={cardHeaderStyle}>\n                        <h5 style={cardTitleStyle}>Project Budget</h5>\n                    </div>\n                    <div style={cardValueStyle}>\n                        {formatCurrency(project.projectBudget)}\n                    </div>\n                    <div style={cardSubtitleStyle}>Total Allocated Budget</div>\n                </div>\n                \n                <div style={summaryCardStyle}>\n                    <div style={cardHeaderStyle}>\n                        <h5 style={cardTitleStyle}>Total Expenses</h5>\n                    </div>\n                    <div style={{...cardValueStyle, color: '#dc3545'}}>\n                        {formatCurrency(expenseData.totalExpense)}\n                    </div>\n                    <div style={cardSubtitleStyle}>Actual Expenses Incurred</div>\n                </div>\n                \n                <div style={summaryCardStyle}>\n                    <div style={cardHeaderStyle}>\n                        <h5 style={cardTitleStyle}>Remaining Budget</h5>\n                    </div>\n                    <div style={{...cardValueStyle, color: '#28a745'}}>\n                        {formatCurrency((project.projectBudget || 0) - (expenseData.totalExpense || 0))}\n                    </div>\n                    <div style={cardSubtitleStyle}>\n                        {project.projectBudget ? \n                            `${(((project.projectBudget - expenseData.totalExpense) / project.projectBudget) * 100).toFixed(1)}% remaining` :\n                            'No budget set'\n                        }\n                    </div>\n                </div>\n            </div>\n\n            <div style={{background: '#f8f9fa', padding: '20px', borderRadius: '8px', marginBottom: '30px', borderLeft: '4px solid #17a2b8'}}>\n                <h5 style={{margin: '0 0 15px 0', color: '#333'}}>Rate Configuration</h5>\n                <div style={{display: 'flex', flexDirection: 'column', gap: '10px'}}>\n                    {project.perHourRate && (\n                        <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n                            <span style={{color: '#333', fontWeight: '500'}}>Hourly Rate:</span>\n                            <span style={{color: '#007bff', fontWeight: 'bold'}}>{formatCurrency(project.perHourRate)}</span>\n                        </div>\n                    )}\n                    {project.perDayRate && (\n                        <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n                            <span style={{color: '#333', fontWeight: '500'}}>Daily Rate:</span>\n                            <span style={{color: '#007bff', fontWeight: 'bold'}}>{formatCurrency(project.perDayRate)}</span>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {dailyStats.length > 0 && (\n                <div style={{marginBottom: '30px'}}>\n                    <h5 style={{margin: '0 0 15px 0', color: '#333'}}>Daily Work & Expense Breakdown</h5>\n                    <div style={{border: '1px solid #ddd', borderRadius: '8px', overflow: 'hidden'}}>\n                        <div style={{overflowX: 'auto'}}>\n                            <table style={{width: '100%', borderCollapse: 'collapse', minWidth: '600px'}}>\n                                <thead>\n                                    <tr>\n                                        <th style={{background: '#343a40', color: 'white', padding: '12px', border: '1px solid #ddd', textAlign: 'left'}}>Date</th>\n                                        <th style={{background: '#343a40', color: 'white', padding: '12px', border: '1px solid #ddd', textAlign: 'center'}}>Employees</th>\n                                        <th style={{background: '#343a40', color: 'white', padding: '12px', border: '1px solid #ddd', textAlign: 'center'}}>Total Hours</th>\n                                        <th style={{background: '#343a40', color: 'white', padding: '12px', border: '1px solid #ddd', textAlign: 'center'}}>Daily Expense</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {dailyStats.map((stat, index) => {\n                                        const dailyExpense = calculateDailyExpense(stat.date, stat.employeeCount, stat.totalHours);\n                                        return (\n                                            <tr key={index} style={{backgroundColor: index % 2 === 0 ? 'white' : '#f8f9fa'}}>\n                                                <td style={{padding: '12px', border: '1px solid #ddd'}}>{formatDate(stat.date)}</td>\n                                                <td style={{padding: '12px', border: '1px solid #ddd', textAlign: 'center'}}>{stat.employeeCount}</td>\n                                                <td style={{padding: '12px', border: '1px solid #ddd', textAlign: 'center'}}>{stat.totalHours ? stat.totalHours.toFixed(1) : '0.0'}</td>\n                                                <td style={{padding: '12px', border: '1px solid #ddd', textAlign: 'center', fontWeight: 'bold', color: '#007bff'}}>{formatCurrency(dailyExpense)}</td>\n                                            </tr>\n                                        );\n                                    })}\n                                </tbody>\n                                <tfoot>\n                                    <tr style={{backgroundColor: '#d4edda'}}>\n                                        <th style={{padding: '12px', border: '1px solid #ddd', color: '#155724', fontWeight: 'bold'}}>Totals</th>\n                                        <th style={{padding: '12px', border: '1px solid #ddd', color: '#155724', fontWeight: 'bold', textAlign: 'center'}}>{dailyStats.reduce((sum, stat) => sum + (stat.employeeCount || 0), 0)} total work days</th>\n                                        <th style={{padding: '12px', border: '1px solid #ddd', color: '#155724', fontWeight: 'bold', textAlign: 'center'}}>{dailyStats.reduce((sum, stat) => sum + (stat.totalHours || 0), 0).toFixed(1)}</th>\n                                        <th style={{padding: '12px', border: '1px solid #ddd', color: '#155724', fontWeight: 'bold', textAlign: 'center', fontSize: '16px'}}>{formatCurrency(totalDailyExpenses)}</th>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <div style={{background: '#fff3cd', padding: '20px', borderRadius: '8px', borderLeft: '4px solid #ffc107'}}>\n                <h5 style={{margin: '0 0 15px 0', color: '#856404'}}>Calculation Notes</h5>\n                <ul style={{margin: '0', paddingLeft: '20px', color: '#856404'}}>\n                    <li style={{marginBottom: '8px'}}>Expenses are calculated based on actual hours worked and configured rates</li>\n                    <li style={{marginBottom: '8px'}}>If hourly rate is set, expense = hours × hourly rate</li>\n                    <li style={{marginBottom: '8px'}}>If only daily rate is set, expense = employees working × daily rate</li>\n                    <li style={{marginBottom: '0'}}>Budget tracking shows remaining allocation vs actual expenses</li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectExpenseSummary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}