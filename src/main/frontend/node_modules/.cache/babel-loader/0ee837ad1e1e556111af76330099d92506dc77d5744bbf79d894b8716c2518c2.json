{"ast":null,"code":"import _objectSpread from\"C:/Users/Asad Dimtimkar/IdeaProjects/ERPcustom/src/main/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import'./TimesheetMatrix.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TimesheetMatrix=_ref=>{let{projectId,startDate,endDate,assignedEmployees}=_ref;const[timesheetData,setTimesheetData]=useState({});const[loading,setLoading]=useState(false);const[dateRange,setDateRange]=useState([]);useEffect(()=>{if(startDate&&endDate){generateDateRange();fetchTimesheetData();}},[projectId,startDate,endDate,assignedEmployees]);const generateDateRange=()=>{const start=new Date(startDate);const end=new Date(endDate);const dates=[];for(let date=new Date(start);date<=end;date.setDate(date.getDate()+1)){dates.push(new Date(date));}setDateRange(dates);};const fetchTimesheetData=async()=>{if(!projectId||!startDate||!endDate)return;try{const response=await fetch(\"/api/projects/\".concat(projectId,\"/timesheet/range?startDate=\").concat(startDate,\"&endDate=\").concat(endDate),{credentials:'include'});if(response.ok){const data=await response.json();const timesheetMap={};data.forEach(timesheet=>{const key=\"\".concat(timesheet.employee.id,\"-\").concat(timesheet.workDate);timesheetMap[key]=timesheet.hoursWorked;});setTimesheetData(timesheetMap);}}catch(error){console.error('Error fetching timesheet data:',error);}};const handleHoursChange=async(employeeId,date,hours)=>{const dateStr=date.toISOString().split('T')[0];const key=\"\".concat(employeeId,\"-\").concat(dateStr);if(!isDateEditable(date)){alert('This date is not editable. Timesheets can only be edited between project start date and today.');return;}setTimesheetData(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:hours}));try{const response=await fetch(\"/api/projects/\".concat(projectId,\"/timesheet?employeeId=\").concat(employeeId,\"&workDate=\").concat(dateStr,\"&hoursWorked=\").concat(hours),{method:'POST',credentials:'include'});if(!response.ok){alert('Failed to save timesheet data');fetchTimesheetData();}}catch(error){console.error('Error saving timesheet:',error);alert('Error saving timesheet data');fetchTimesheetData();}};const isDateEditable=date=>{const today=new Date();const projectStart=new Date(startDate);const projectEnd=new Date(endDate);today.setHours(23,59,59,999);return date>=projectStart&&date<=projectEnd&&date<=today;};const formatDate=date=>{const options={month:'short',day:'numeric'};return date.toLocaleDateString('en-US',options);};const getTimesheetValue=(employeeId,date)=>{const dateStr=date.toISOString().split('T')[0];const key=\"\".concat(employeeId,\"-\").concat(dateStr);return timesheetData[key]||'';};if(!assignedEmployees||assignedEmployees.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"timesheet-matrix\",children:/*#__PURE__*/_jsx(\"p\",{className:\"no-employees\",children:\"No employees assigned to this project yet.\"})});}if(dateRange.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"timesheet-matrix\",children:/*#__PURE__*/_jsx(\"p\",{className:\"no-dates\",children:\"Invalid date range.\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"timesheet-matrix\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Daily Timesheet Matrix\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"matrix-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Project Duration:\"}),\" \",new Date(startDate).toLocaleDateString(),\" to \",new Date(endDate).toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Assigned Employees:\"}),\" \",assignedEmployees.length]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"small\",{children:/*#__PURE__*/_jsx(\"em\",{children:\"* Only dates between project start date and today are editable\"})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"matrix-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"matrix-scroll\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"timesheet-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"employee-header\",children:\"Employee\"}),dateRange.map((date,index)=>/*#__PURE__*/_jsx(\"th\",{className:\"date-header \".concat(!isDateEditable(date)?'non-editable':''),children:/*#__PURE__*/_jsxs(\"div\",{className:\"date-cell\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"date-day\",children:formatDate(date)}),/*#__PURE__*/_jsx(\"div\",{className:\"date-weekday\",children:date.toLocaleDateString('en-US',{weekday:'short'})})]})},index)),/*#__PURE__*/_jsx(\"th\",{className:\"total-header\",children:\"Total Hours\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:assignedEmployees.map(projectEmployee=>{const employee=projectEmployee.employee;const totalHours=dateRange.reduce((total,date)=>{const hours=parseFloat(getTimesheetValue(employee.id,date))||0;return total+hours;},0);return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"employee-cell\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"employee-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:employee.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"emp-id\",children:[\"(\",employee.empId,\")\"]}),projectEmployee.roleInProject&&/*#__PURE__*/_jsx(\"span\",{className:\"role\",children:projectEmployee.roleInProject})]})}),dateRange.map((date,dateIndex)=>{const isEditable=isDateEditable(date);const hours=getTimesheetValue(employee.id,date);return/*#__PURE__*/_jsx(\"td\",{className:\"hours-cell \".concat(!isEditable?'non-editable':''),children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.5\",min:\"0\",max:\"24\",value:hours,onChange:e=>handleHoursChange(employee.id,date,e.target.value),disabled:!isEditable,className:\"hours-input\",placeholder:\"0\"})},dateIndex);}),/*#__PURE__*/_jsx(\"td\",{className:\"total-cell\",children:/*#__PURE__*/_jsx(\"strong\",{children:totalHours.toFixed(1)})})]},employee.id);})}),/*#__PURE__*/_jsx(\"tfoot\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"daily-totals\",children:[/*#__PURE__*/_jsx(\"th\",{children:\"Daily Totals\"}),dateRange.map((date,dateIndex)=>{const dailyTotal=assignedEmployees.reduce((total,pe)=>{const hours=parseFloat(getTimesheetValue(pe.employee.id,date))||0;return total+hours;},0);return/*#__PURE__*/_jsx(\"th\",{className:\"daily-total-cell\",children:dailyTotal.toFixed(1)},dateIndex);}),/*#__PURE__*/_jsx(\"th\",{className:\"grand-total\",children:assignedEmployees.reduce((grandTotal,pe)=>{const employeeTotal=dateRange.reduce((empTotal,date)=>{const hours=parseFloat(getTimesheetValue(pe.employee.id,date))||0;return empTotal+hours;},0);return grandTotal+employeeTotal;},0).toFixed(1)})]})})]})})})]});};export default TimesheetMatrix;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","TimesheetMatrix","_ref","projectId","startDate","endDate","assignedEmployees","timesheetData","setTimesheetData","loading","setLoading","dateRange","setDateRange","generateDateRange","fetchTimesheetData","start","Date","end","dates","date","setDate","getDate","push","response","fetch","concat","credentials","ok","data","json","timesheetMap","forEach","timesheet","key","employee","id","workDate","hoursWorked","error","console","handleHoursChange","employeeId","hours","dateStr","toISOString","split","isDateEditable","alert","prev","_objectSpread","method","today","projectStart","projectEnd","setHours","formatDate","options","month","day","toLocaleDateString","getTimesheetValue","length","className","children","map","index","weekday","projectEmployee","totalHours","reduce","total","parseFloat","name","empId","roleInProject","dateIndex","isEditable","type","step","min","max","value","onChange","e","target","disabled","placeholder","toFixed","dailyTotal","pe","grandTotal","employeeTotal","empTotal"],"sources":["C:/Users/Asad Dimtimkar/IdeaProjects/ERPcustom/src/main/frontend/src/components/TimesheetMatrix.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './TimesheetMatrix.css';\n\nconst TimesheetMatrix = ({ projectId, startDate, endDate, assignedEmployees }) => {\n    const [timesheetData, setTimesheetData] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [dateRange, setDateRange] = useState([]);\n\n    useEffect(() => {\n        if (startDate && endDate) {\n            generateDateRange();\n            fetchTimesheetData();\n        }\n    }, [projectId, startDate, endDate, assignedEmployees]);\n\n    const generateDateRange = () => {\n        const start = new Date(startDate);\n        const end = new Date(endDate);\n        const dates = [];\n        \n        for (let date = new Date(start); date <= end; date.setDate(date.getDate() + 1)) {\n            dates.push(new Date(date));\n        }\n        \n        setDateRange(dates);\n    };\n\n    const fetchTimesheetData = async () => {\n        if (!projectId || !startDate || !endDate) return;\n        \n        try {\n            const response = await fetch(`/api/projects/${projectId}/timesheet/range?startDate=${startDate}&endDate=${endDate}`, {\n                credentials: 'include'\n            });\n            \n            if (response.ok) {\n                const data = await response.json();\n                const timesheetMap = {};\n                \n                data.forEach(timesheet => {\n                    const key = `${timesheet.employee.id}-${timesheet.workDate}`;\n                    timesheetMap[key] = timesheet.hoursWorked;\n                });\n                \n                setTimesheetData(timesheetMap);\n            }\n        } catch (error) {\n            console.error('Error fetching timesheet data:', error);\n        }\n    };\n\n    const handleHoursChange = async (employeeId, date, hours) => {\n        const dateStr = date.toISOString().split('T')[0];\n        const key = `${employeeId}-${dateStr}`;\n        \n        if (!isDateEditable(date)) {\n            alert('This date is not editable. Timesheets can only be edited between project start date and today.');\n            return;\n        }\n        \n        setTimesheetData(prev => ({\n            ...prev,\n            [key]: hours\n        }));\n\n        try {\n            const response = await fetch(`/api/projects/${projectId}/timesheet?employeeId=${employeeId}&workDate=${dateStr}&hoursWorked=${hours}`, {\n                method: 'POST',\n                credentials: 'include'\n            });\n            \n            if (!response.ok) {\n                alert('Failed to save timesheet data');\n                fetchTimesheetData();\n            }\n        } catch (error) {\n            console.error('Error saving timesheet:', error);\n            alert('Error saving timesheet data');\n            fetchTimesheetData();\n        }\n    };\n\n    const isDateEditable = (date) => {\n        const today = new Date();\n        const projectStart = new Date(startDate);\n        const projectEnd = new Date(endDate);\n        \n        today.setHours(23, 59, 59, 999);\n        \n        return date >= projectStart && date <= projectEnd && date <= today;\n    };\n\n    const formatDate = (date) => {\n        const options = { month: 'short', day: 'numeric' };\n        return date.toLocaleDateString('en-US', options);\n    };\n\n    const getTimesheetValue = (employeeId, date) => {\n        const dateStr = date.toISOString().split('T')[0];\n        const key = `${employeeId}-${dateStr}`;\n        return timesheetData[key] || '';\n    };\n\n    if (!assignedEmployees || assignedEmployees.length === 0) {\n        return (\n            <div className=\"timesheet-matrix\">\n                <p className=\"no-employees\">No employees assigned to this project yet.</p>\n            </div>\n        );\n    }\n\n    if (dateRange.length === 0) {\n        return (\n            <div className=\"timesheet-matrix\">\n                <p className=\"no-dates\">Invalid date range.</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"timesheet-matrix\">\n            <h4>Daily Timesheet Matrix</h4>\n            <div className=\"matrix-info\">\n                <p><strong>Project Duration:</strong> {new Date(startDate).toLocaleDateString()} to {new Date(endDate).toLocaleDateString()}</p>\n                <p><strong>Assigned Employees:</strong> {assignedEmployees.length}</p>\n                <p><small><em>* Only dates between project start date and today are editable</em></small></p>\n            </div>\n            \n            <div className=\"matrix-container\">\n                <div className=\"matrix-scroll\">\n                    <table className=\"timesheet-table\">\n                        <thead>\n                            <tr>\n                                <th className=\"employee-header\">Employee</th>\n                                {dateRange.map((date, index) => (\n                                    <th key={index} className={`date-header ${!isDateEditable(date) ? 'non-editable' : ''}`}>\n                                        <div className=\"date-cell\">\n                                            <div className=\"date-day\">{formatDate(date)}</div>\n                                            <div className=\"date-weekday\">{date.toLocaleDateString('en-US', { weekday: 'short' })}</div>\n                                        </div>\n                                    </th>\n                                ))}\n                                <th className=\"total-header\">Total Hours</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {assignedEmployees.map(projectEmployee => {\n                                const employee = projectEmployee.employee;\n                                const totalHours = dateRange.reduce((total, date) => {\n                                    const hours = parseFloat(getTimesheetValue(employee.id, date)) || 0;\n                                    return total + hours;\n                                }, 0);\n                                \n                                return (\n                                    <tr key={employee.id}>\n                                        <td className=\"employee-cell\">\n                                            <div className=\"employee-info\">\n                                                <strong>{employee.name}</strong>\n                                                <span className=\"emp-id\">({employee.empId})</span>\n                                                {projectEmployee.roleInProject && (\n                                                    <span className=\"role\">{projectEmployee.roleInProject}</span>\n                                                )}\n                                            </div>\n                                        </td>\n                                        {dateRange.map((date, dateIndex) => {\n                                            const isEditable = isDateEditable(date);\n                                            const hours = getTimesheetValue(employee.id, date);\n                                            \n                                            return (\n                                                <td key={dateIndex} className={`hours-cell ${!isEditable ? 'non-editable' : ''}`}>\n                                                    <input\n                                                        type=\"number\"\n                                                        step=\"0.5\"\n                                                        min=\"0\"\n                                                        max=\"24\"\n                                                        value={hours}\n                                                        onChange={(e) => handleHoursChange(employee.id, date, e.target.value)}\n                                                        disabled={!isEditable}\n                                                        className=\"hours-input\"\n                                                        placeholder=\"0\"\n                                                    />\n                                                </td>\n                                            );\n                                        })}\n                                        <td className=\"total-cell\">\n                                            <strong>{totalHours.toFixed(1)}</strong>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                        <tfoot>\n                            <tr className=\"daily-totals\">\n                                <th>Daily Totals</th>\n                                {dateRange.map((date, dateIndex) => {\n                                    const dailyTotal = assignedEmployees.reduce((total, pe) => {\n                                        const hours = parseFloat(getTimesheetValue(pe.employee.id, date)) || 0;\n                                        return total + hours;\n                                    }, 0);\n                                    \n                                    return (\n                                        <th key={dateIndex} className=\"daily-total-cell\">\n                                            {dailyTotal.toFixed(1)}\n                                        </th>\n                                    );\n                                })}\n                                <th className=\"grand-total\">\n                                    {assignedEmployees.reduce((grandTotal, pe) => {\n                                        const employeeTotal = dateRange.reduce((empTotal, date) => {\n                                            const hours = parseFloat(getTimesheetValue(pe.employee.id, date)) || 0;\n                                            return empTotal + hours;\n                                        }, 0);\n                                        return grandTotal + employeeTotal;\n                                    }, 0).toFixed(1)}\n                                </th>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TimesheetMatrix;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}