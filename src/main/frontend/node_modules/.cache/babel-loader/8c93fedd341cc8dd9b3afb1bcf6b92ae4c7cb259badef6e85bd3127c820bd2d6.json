{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'./ReportDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ReportDashboard=()=>{const navigate=useNavigate();const[startDate,setStartDate]=useState(new Date().toISOString().split('T')[0]);const[endDate,setEndDate]=useState(new Date().toISOString().split('T')[0]);const[cashFlowData,setCashFlowData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const fetchCashFlowReport=async()=>{setLoading(true);setError(null);try{const response=await fetch(\"/api/reports/cashflow?startDate=\".concat(startDate,\"&endDate=\").concat(endDate),{credentials:'include'});if(!response.ok){throw new Error('Failed to fetch cash flow report');}const data=await response.json();setCashFlowData(data);}catch(err){setError(err.message);}finally{setLoading(false);}};useEffect(()=>{fetchCashFlowReport();},[]);const handleDateChange=()=>{fetchCashFlowReport();};const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(amount||0);};return/*#__PURE__*/_jsxs(\"div\",{className:\"report-dashboard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"report-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Cash Flow Report\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/dashboard'),className:\"back-btn\",children:\"Back to Dashboard\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"date-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Start Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:startDate,onChange:e=>setStartDate(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"End Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:endDate,onChange:e=>setEndDate(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDateChange,className:\"filter-btn\",children:\"Apply Filter\"})]}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[\"Error: \",error]}),cashFlowData&&cashFlowData.projectSummaries&&/*#__PURE__*/_jsxs(\"div\",{className:\"report-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Project Cash Flow Summary\"}),cashFlowData.projectSummaries.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No cash flow data found for the selected date range.\"}):/*#__PURE__*/_jsxs(\"table\",{className:\"report-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Project ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Project Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Inflow\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Outflow\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Net Cash Flow\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:cashFlowData.projectSummaries.map(project=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:project.projectId}),/*#__PURE__*/_jsx(\"td\",{children:project.projectDescription}),/*#__PURE__*/_jsx(\"td\",{className:\"amount positive\",children:formatCurrency(project.totalInflow)}),/*#__PURE__*/_jsx(\"td\",{className:\"amount negative\",children:formatCurrency(project.totalOutflow)}),/*#__PURE__*/_jsx(\"td\",{className:\"amount \".concat(project.netCashFlow>=0?'positive':'negative'),children:formatCurrency(project.netCashFlow)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"details-btn\",onClick:()=>{const row=document.getElementById(\"details-\".concat(project.projectId));row.style.display=row.style.display==='none'?'table-row':'none';},children:\"View Details\"})})]}),/*#__PURE__*/_jsx(\"tr\",{id:\"details-\".concat(project.projectId),className:\"details-row\",style:{display:'none'},children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"transaction-details\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Transaction Details\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"sub-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Category\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Reference\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:project.transactions&&project.transactions.map((trans,idx)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:trans.transactionDate}),/*#__PURE__*/_jsx(\"td\",{children:trans.type}),/*#__PURE__*/_jsx(\"td\",{children:trans.description}),/*#__PURE__*/_jsx(\"td\",{children:trans.category}),/*#__PURE__*/_jsx(\"td\",{children:trans.referenceNumber}),/*#__PURE__*/_jsx(\"td\",{className:\"amount \".concat(trans.type==='INFLOW'?'positive':'negative'),children:formatCurrency(trans.amount)})]},idx))})]})]})})})]},project.projectId))}),/*#__PURE__*/_jsx(\"tfoot\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"td\",{colSpan:\"2\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Grand Total\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"amount positive\",children:/*#__PURE__*/_jsx(\"strong\",{children:formatCurrency(cashFlowData.projectSummaries.reduce((sum,p)=>sum+(p.totalInflow||0),0))})}),/*#__PURE__*/_jsx(\"td\",{className:\"amount negative\",children:/*#__PURE__*/_jsx(\"strong\",{children:formatCurrency(cashFlowData.projectSummaries.reduce((sum,p)=>sum+(p.totalOutflow||0),0))})}),/*#__PURE__*/_jsx(\"td\",{className:\"amount\",children:/*#__PURE__*/_jsx(\"strong\",{children:formatCurrency(cashFlowData.projectSummaries.reduce((sum,p)=>sum+(p.netCashFlow||0),0))})}),/*#__PURE__*/_jsx(\"td\",{})]})})]})]})]});};export default ReportDashboard;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","ReportDashboard","navigate","startDate","setStartDate","Date","toISOString","split","endDate","setEndDate","cashFlowData","setCashFlowData","loading","setLoading","error","setError","fetchCashFlowReport","response","fetch","concat","credentials","ok","Error","data","json","err","message","handleDateChange","formatCurrency","amount","Intl","NumberFormat","style","currency","format","className","children","onClick","type","value","onChange","e","target","projectSummaries","length","map","project","Fragment","projectId","projectDescription","totalInflow","totalOutflow","netCashFlow","row","document","getElementById","display","id","colSpan","transactions","trans","idx","transactionDate","description","category","referenceNumber","reduce","sum","p"],"sources":["C:/Users/Asad Dimtimkar/IdeaProjects/ERPcustomV1/ERPcustom/src/main/frontend/src/components/ReportDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ReportDashboard.css';\n\nconst ReportDashboard = () => {\n    const navigate = useNavigate();\n    const [startDate, setStartDate] = useState(new Date().toISOString().split('T')[0]);\n    const [endDate, setEndDate] = useState(new Date().toISOString().split('T')[0]);\n    const [cashFlowData, setCashFlowData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const fetchCashFlowReport = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(`/api/reports/cashflow?startDate=${startDate}&endDate=${endDate}`, {\n                credentials: 'include'\n            });\n            \n            if (!response.ok) {\n                throw new Error('Failed to fetch cash flow report');\n            }\n            \n            const data = await response.json();\n            setCashFlowData(data);\n        } catch (err) {\n            setError(err.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchCashFlowReport();\n    }, []);\n\n    const handleDateChange = () => {\n        fetchCashFlowReport();\n    };\n\n    const formatCurrency = (amount) => {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD'\n        }).format(amount || 0);\n    };\n\n    return (\n        <div className=\"report-dashboard\">\n            <div className=\"report-header\">\n                <h2>Cash Flow Report</h2>\n                <button\n                    onClick={() => navigate('/dashboard')}\n                    className=\"back-btn\"\n                >\n                    Back to Dashboard\n                </button>\n            </div>\n            \n            <div className=\"date-filters\">\n                <div className=\"date-input\">\n                    <label>Start Date:</label>\n                    <input\n                        type=\"date\"\n                        value={startDate}\n                        onChange={(e) => setStartDate(e.target.value)}\n                    />\n                </div>\n                <div className=\"date-input\">\n                    <label>End Date:</label>\n                    <input\n                        type=\"date\"\n                        value={endDate}\n                        onChange={(e) => setEndDate(e.target.value)}\n                    />\n                </div>\n                <button onClick={handleDateChange} className=\"filter-btn\">\n                    Apply Filter\n                </button>\n            </div>\n\n            {loading && <div className=\"loading\">Loading...</div>}\n            {error && <div className=\"error\">Error: {error}</div>}\n\n            {cashFlowData && cashFlowData.projectSummaries && (\n                <div className=\"report-content\">\n                    <h3>Project Cash Flow Summary</h3>\n                    {cashFlowData.projectSummaries.length === 0 ? (\n                        <p>No cash flow data found for the selected date range.</p>\n                    ) : (\n                        <table className=\"report-table\">\n                            <thead>\n                                <tr>\n                                    <th>Project ID</th>\n                                    <th>Project Description</th>\n                                    <th>Total Inflow</th>\n                                    <th>Total Outflow</th>\n                                    <th>Net Cash Flow</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {cashFlowData.projectSummaries.map((project) => (\n                                    <React.Fragment key={project.projectId}>\n                                        <tr>\n                                            <td>{project.projectId}</td>\n                                            <td>{project.projectDescription}</td>\n                                            <td className=\"amount positive\">{formatCurrency(project.totalInflow)}</td>\n                                            <td className=\"amount negative\">{formatCurrency(project.totalOutflow)}</td>\n                                            <td className={`amount ${project.netCashFlow >= 0 ? 'positive' : 'negative'}`}>\n                                                {formatCurrency(project.netCashFlow)}\n                                            </td>\n                                            <td>\n                                                <button \n                                                    className=\"details-btn\"\n                                                    onClick={() => {\n                                                        const row = document.getElementById(`details-${project.projectId}`);\n                                                        row.style.display = row.style.display === 'none' ? 'table-row' : 'none';\n                                                    }}\n                                                >\n                                                    View Details\n                                                </button>\n                                            </td>\n                                        </tr>\n                                        <tr id={`details-${project.projectId}`} className=\"details-row\" style={{ display: 'none' }}>\n                                            <td colSpan=\"6\">\n                                                <div className=\"transaction-details\">\n                                                    <h4>Transaction Details</h4>\n                                                    <table className=\"sub-table\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th>Date</th>\n                                                                <th>Type</th>\n                                                                <th>Description</th>\n                                                                <th>Category</th>\n                                                                <th>Reference</th>\n                                                                <th>Amount</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {project.transactions && project.transactions.map((trans, idx) => (\n                                                                <tr key={idx}>\n                                                                    <td>{trans.transactionDate}</td>\n                                                                    <td>{trans.type}</td>\n                                                                    <td>{trans.description}</td>\n                                                                    <td>{trans.category}</td>\n                                                                    <td>{trans.referenceNumber}</td>\n                                                                    <td className={`amount ${trans.type === 'INFLOW' ? 'positive' : 'negative'}`}>\n                                                                        {formatCurrency(trans.amount)}\n                                                                    </td>\n                                                                </tr>\n                                                            ))}\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    </React.Fragment>\n                                ))}\n                            </tbody>\n                            <tfoot>\n                                <tr className=\"total-row\">\n                                    <td colSpan=\"2\"><strong>Grand Total</strong></td>\n                                    <td className=\"amount positive\">\n                                        <strong>\n                                            {formatCurrency(\n                                                cashFlowData.projectSummaries.reduce((sum, p) => sum + (p.totalInflow || 0), 0)\n                                            )}\n                                        </strong>\n                                    </td>\n                                    <td className=\"amount negative\">\n                                        <strong>\n                                            {formatCurrency(\n                                                cashFlowData.projectSummaries.reduce((sum, p) => sum + (p.totalOutflow || 0), 0)\n                                            )}\n                                        </strong>\n                                    </td>\n                                    <td className=\"amount\">\n                                        <strong>\n                                            {formatCurrency(\n                                                cashFlowData.projectSummaries.reduce((sum, p) => sum + (p.netCashFlow || 0), 0)\n                                            )}\n                                        </strong>\n                                    </td>\n                                    <td></td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ReportDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}