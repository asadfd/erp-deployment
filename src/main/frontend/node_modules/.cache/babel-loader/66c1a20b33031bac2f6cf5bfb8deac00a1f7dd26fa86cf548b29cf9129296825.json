{"ast":null,"code":"import React,{useState,useEffect}from'react';import CreateProject from'./CreateProject';import UpdateProject from'./UpdateProject';import ProjectList from'./ProjectList';import'./ProjectManager.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProjectManager=()=>{const[activeView,setActiveView]=useState('dashboard');const[projects,setProjects]=useState([]);const[selectedProject,setSelectedProject]=useState(null);useEffect(()=>{fetchProjects();},[]);const fetchProjects=async()=>{try{const response=await fetch('/api/projects',{credentials:'include'});if(response.ok){const data=await response.json();setProjects(data);}}catch(error){console.error('Error fetching projects:',error);}};const handleCreateProject=()=>{setSelectedProject(null);setActiveView('create');};const handleUpdateProject=project=>{setSelectedProject(project);setActiveView('update');};const handleDeleteProject=async projectId=>{if(window.confirm('Are you sure you want to delete this project?')){try{const response=await fetch(\"/api/projects/\".concat(projectId),{method:'DELETE',credentials:'include'});if(response.ok){fetchProjects();alert('Project deleted successfully');}else{alert('Failed to delete project');}}catch(error){console.error('Error deleting project:',error);alert('Error deleting project');}}};const handleProjectSaved=()=>{fetchProjects();setActiveView('list');};const renderDashboard=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"project-dashboard\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Project Manager Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"dashboard-btn create-btn\",onClick:handleCreateProject,children:\"Create Project\"}),/*#__PURE__*/_jsx(\"button\",{className:\"dashboard-btn update-btn\",onClick:()=>setActiveView('list'),children:\"Update Project\"}),/*#__PURE__*/_jsx(\"button\",{className:\"dashboard-btn delete-btn\",onClick:()=>setActiveView('list'),children:\"Delete Project\"}),/*#__PURE__*/_jsx(\"button\",{className:\"dashboard-btn list-btn\",onClick:()=>setActiveView('list'),children:\"List Projects\"})]})]});const renderContent=()=>{switch(activeView){case'create':return/*#__PURE__*/_jsx(CreateProject,{onProjectSaved:handleProjectSaved,onCancel:()=>setActiveView('dashboard')});case'update':return/*#__PURE__*/_jsx(UpdateProject,{project:selectedProject,onProjectSaved:handleProjectSaved,onCancel:()=>setActiveView('list')});case'list':return/*#__PURE__*/_jsx(ProjectList,{projects:projects,onUpdateProject:handleUpdateProject,onDeleteProject:handleDeleteProject,onCreateProject:handleCreateProject,onBack:()=>setActiveView('dashboard')});default:return renderDashboard();}};return/*#__PURE__*/_jsx(\"div\",{className:\"project-manager\",children:renderContent()});};export default ProjectManager;","map":{"version":3,"names":["React","useState","useEffect","CreateProject","UpdateProject","ProjectList","jsx","_jsx","jsxs","_jsxs","ProjectManager","activeView","setActiveView","projects","setProjects","selectedProject","setSelectedProject","fetchProjects","response","fetch","credentials","ok","data","json","error","console","handleCreateProject","handleUpdateProject","project","handleDeleteProject","projectId","window","confirm","concat","method","alert","handleProjectSaved","renderDashboard","className","children","onClick","renderContent","onProjectSaved","onCancel","onUpdateProject","onDeleteProject","onCreateProject","onBack"],"sources":["C:/Users/Asad Dimtimkar/IdeaProjects/ERPcustom/src/main/frontend/src/components/ProjectManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CreateProject from './CreateProject';\nimport UpdateProject from './UpdateProject';\nimport ProjectList from './ProjectList';\nimport './ProjectManager.css';\n\nconst ProjectManager = () => {\n    const [activeView, setActiveView] = useState('dashboard');\n    const [projects, setProjects] = useState([]);\n    const [selectedProject, setSelectedProject] = useState(null);\n\n    useEffect(() => {\n        fetchProjects();\n    }, []);\n\n    const fetchProjects = async () => {\n        try {\n            const response = await fetch('/api/projects', {\n                credentials: 'include'\n            });\n            if (response.ok) {\n                const data = await response.json();\n                setProjects(data);\n            }\n        } catch (error) {\n            console.error('Error fetching projects:', error);\n        }\n    };\n\n    const handleCreateProject = () => {\n        setSelectedProject(null);\n        setActiveView('create');\n    };\n\n    const handleUpdateProject = (project) => {\n        setSelectedProject(project);\n        setActiveView('update');\n    };\n\n    const handleDeleteProject = async (projectId) => {\n        if (window.confirm('Are you sure you want to delete this project?')) {\n            try {\n                const response = await fetch(`/api/projects/${projectId}`, {\n                    method: 'DELETE',\n                    credentials: 'include'\n                });\n                if (response.ok) {\n                    fetchProjects();\n                    alert('Project deleted successfully');\n                } else {\n                    alert('Failed to delete project');\n                }\n            } catch (error) {\n                console.error('Error deleting project:', error);\n                alert('Error deleting project');\n            }\n        }\n    };\n\n    const handleProjectSaved = () => {\n        fetchProjects();\n        setActiveView('list');\n    };\n\n    const renderDashboard = () => (\n        <div className=\"project-dashboard\">\n            <h2>Project Manager Dashboard</h2>\n            <div className=\"dashboard-buttons\">\n                <button \n                    className=\"dashboard-btn create-btn\" \n                    onClick={handleCreateProject}\n                >\n                    Create Project\n                </button>\n                <button \n                    className=\"dashboard-btn update-btn\" \n                    onClick={() => setActiveView('list')}\n                >\n                    Update Project\n                </button>\n                <button \n                    className=\"dashboard-btn delete-btn\" \n                    onClick={() => setActiveView('list')}\n                >\n                    Delete Project\n                </button>\n                <button \n                    className=\"dashboard-btn list-btn\" \n                    onClick={() => setActiveView('list')}\n                >\n                    List Projects\n                </button>\n            </div>\n        </div>\n    );\n\n    const renderContent = () => {\n        switch (activeView) {\n            case 'create':\n                return (\n                    <CreateProject \n                        onProjectSaved={handleProjectSaved}\n                        onCancel={() => setActiveView('dashboard')}\n                    />\n                );\n            case 'update':\n                return (\n                    <UpdateProject \n                        project={selectedProject}\n                        onProjectSaved={handleProjectSaved}\n                        onCancel={() => setActiveView('list')}\n                    />\n                );\n            case 'list':\n                return (\n                    <ProjectList \n                        projects={projects}\n                        onUpdateProject={handleUpdateProject}\n                        onDeleteProject={handleDeleteProject}\n                        onCreateProject={handleCreateProject}\n                        onBack={() => setActiveView('dashboard')}\n                    />\n                );\n            default:\n                return renderDashboard();\n        }\n    };\n\n    return (\n        <div className=\"project-manager\">\n            {renderContent()}\n        </div>\n    );\n};\n\nexport default ProjectManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}