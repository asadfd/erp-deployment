{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'./EmployeeHoursReport.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EmployeeHoursReport=()=>{const navigate=useNavigate();const[startDate,setStartDate]=useState(new Date().toISOString().split('T')[0]);const[endDate,setEndDate]=useState(new Date().toISOString().split('T')[0]);const[employeeData,setEmployeeData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[expandedEmployees,setExpandedEmployees]=useState(new Set());const fetchEmployeeHoursReport=async()=>{setLoading(true);setError(null);try{const response=await fetch(\"/api/reports/employee-hours?startDate=\".concat(startDate,\"&endDate=\").concat(endDate),{credentials:'include'});if(!response.ok){throw new Error('Failed to fetch employee hours report');}const data=await response.json();setEmployeeData(data);}catch(err){setError(err.message);}finally{setLoading(false);}};useEffect(()=>{fetchEmployeeHoursReport();},[]);const handleDateChange=()=>{fetchEmployeeHoursReport();};const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(amount||0);};const formatHours=hours=>{return parseFloat(hours||0).toFixed(2);};const toggleEmployeeDetails=employeeId=>{const newExpanded=new Set(expandedEmployees);if(newExpanded.has(employeeId)){newExpanded.delete(employeeId);}else{newExpanded.add(employeeId);}setExpandedEmployees(newExpanded);};return/*#__PURE__*/_jsxs(\"div\",{className:\"employee-hours-report\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"report-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Employee Hours & Billing Report\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/dashboard'),className:\"back-btn\",children:\"Back to Dashboard\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"date-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Start Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:startDate,onChange:e=>setStartDate(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"End Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:endDate,onChange:e=>setEndDate(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDateChange,className:\"filter-btn\",children:\"Apply Filter\"})]}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[\"Error: \",error]}),employeeData&&employeeData.employeeSummaries&&/*#__PURE__*/_jsxs(\"div\",{className:\"report-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Employee Work Summary\"}),employeeData.employeeSummaries.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No employee hours data found for the selected date range.\"}):/*#__PURE__*/_jsxs(\"table\",{className:\"report-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Employee ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Employee Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Employee Code\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Hours\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Days\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:employeeData.employeeSummaries.map(employee=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:employee.employeeId}),/*#__PURE__*/_jsx(\"td\",{children:employee.employeeName}),/*#__PURE__*/_jsx(\"td\",{children:employee.empId}),/*#__PURE__*/_jsx(\"td\",{children:formatHours(employee.totalHours)}),/*#__PURE__*/_jsx(\"td\",{children:(employee.totalHours/8).toFixed(1)}),/*#__PURE__*/_jsx(\"td\",{className:\"amount\",children:formatCurrency(employee.totalAmount)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"button\",{className:\"details-btn\",onClick:()=>toggleEmployeeDetails(employee.employeeId),children:[expandedEmployees.has(employee.employeeId)?'Hide':'View',\" Projects\"]})})]}),expandedEmployees.has(employee.employeeId)&&/*#__PURE__*/_jsx(\"tr\",{className:\"details-row\",children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"7\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"project-details\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Project Assignment Details\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"sub-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Project ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Project Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Hours Worked\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Days Worked\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Daily Rate\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Hourly Rate\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Amount\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:employee.projectDetails&&employee.projectDetails.map(project=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:project.projectId}),/*#__PURE__*/_jsx(\"td\",{children:project.projectDescription}),/*#__PURE__*/_jsx(\"td\",{children:formatHours(project.hoursWorked)}),/*#__PURE__*/_jsx(\"td\",{children:project.daysWorked}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(project.dailyRate)}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(project.hourlyRate)}),/*#__PURE__*/_jsx(\"td\",{className:\"amount\",children:formatCurrency(project.totalAmount)})]},project.projectId))}),/*#__PURE__*/_jsx(\"tfoot\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"sub-total-row\",children:[/*#__PURE__*/_jsx(\"td\",{colSpan:\"2\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Project Totals\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"strong\",{children:formatHours(employee.totalHours)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"strong\",{children:(employee.totalHours/8).toFixed(1)})}),/*#__PURE__*/_jsx(\"td\",{colSpan:\"2\"}),/*#__PURE__*/_jsx(\"td\",{className:\"amount\",children:/*#__PURE__*/_jsx(\"strong\",{children:formatCurrency(employee.totalAmount)})})]})})]})]})})})]},employee.employeeId))}),/*#__PURE__*/_jsx(\"tfoot\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"td\",{colSpan:\"3\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Grand Total\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"strong\",{children:formatHours(employeeData.employeeSummaries.reduce((sum,e)=>sum+parseFloat(e.totalHours||0),0))})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"strong\",{children:(employeeData.employeeSummaries.reduce((sum,e)=>sum+parseFloat(e.totalHours||0),0)/8).toFixed(1)})}),/*#__PURE__*/_jsx(\"td\",{className:\"amount\",children:/*#__PURE__*/_jsx(\"strong\",{children:formatCurrency(employeeData.employeeSummaries.reduce((sum,e)=>sum+parseFloat(e.totalAmount||0),0))})}),/*#__PURE__*/_jsx(\"td\",{})]})})]})]})]});};export default EmployeeHoursReport;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","EmployeeHoursReport","navigate","startDate","setStartDate","Date","toISOString","split","endDate","setEndDate","employeeData","setEmployeeData","loading","setLoading","error","setError","expandedEmployees","setExpandedEmployees","Set","fetchEmployeeHoursReport","response","fetch","concat","credentials","ok","Error","data","json","err","message","handleDateChange","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatHours","hours","parseFloat","toFixed","toggleEmployeeDetails","employeeId","newExpanded","has","delete","add","className","children","onClick","type","value","onChange","e","target","employeeSummaries","length","map","employee","Fragment","employeeName","empId","totalHours","totalAmount","colSpan","projectDetails","project","projectId","projectDescription","hoursWorked","daysWorked","dailyRate","hourlyRate","reduce","sum"],"sources":["C:/Users/Asad Dimtimkar/IdeaProjects/ERPcustomV1/ERPcustom/src/main/frontend/src/components/EmployeeHoursReport.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './EmployeeHoursReport.css';\n\nconst EmployeeHoursReport = () => {\n    const navigate = useNavigate();\n    const [startDate, setStartDate] = useState(new Date().toISOString().split('T')[0]);\n    const [endDate, setEndDate] = useState(new Date().toISOString().split('T')[0]);\n    const [employeeData, setEmployeeData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [expandedEmployees, setExpandedEmployees] = useState(new Set());\n\n    const fetchEmployeeHoursReport = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(`/api/reports/employee-hours?startDate=${startDate}&endDate=${endDate}`, {\n                credentials: 'include'\n            });\n            \n            if (!response.ok) {\n                throw new Error('Failed to fetch employee hours report');\n            }\n            \n            const data = await response.json();\n            setEmployeeData(data);\n        } catch (err) {\n            setError(err.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchEmployeeHoursReport();\n    }, []);\n\n    const handleDateChange = () => {\n        fetchEmployeeHoursReport();\n    };\n\n    const formatCurrency = (amount) => {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD'\n        }).format(amount || 0);\n    };\n\n    const formatHours = (hours) => {\n        return parseFloat(hours || 0).toFixed(2);\n    };\n\n    const toggleEmployeeDetails = (employeeId) => {\n        const newExpanded = new Set(expandedEmployees);\n        if (newExpanded.has(employeeId)) {\n            newExpanded.delete(employeeId);\n        } else {\n            newExpanded.add(employeeId);\n        }\n        setExpandedEmployees(newExpanded);\n    };\n\n    return (\n        <div className=\"employee-hours-report\">\n            <div className=\"report-header\">\n                <h2>Employee Hours & Billing Report</h2>\n                <button\n                    onClick={() => navigate('/dashboard')}\n                    className=\"back-btn\"\n                >\n                    Back to Dashboard\n                </button>\n            </div>\n            \n            <div className=\"date-filters\">\n                <div className=\"date-input\">\n                    <label>Start Date:</label>\n                    <input\n                        type=\"date\"\n                        value={startDate}\n                        onChange={(e) => setStartDate(e.target.value)}\n                    />\n                </div>\n                <div className=\"date-input\">\n                    <label>End Date:</label>\n                    <input\n                        type=\"date\"\n                        value={endDate}\n                        onChange={(e) => setEndDate(e.target.value)}\n                    />\n                </div>\n                <button onClick={handleDateChange} className=\"filter-btn\">\n                    Apply Filter\n                </button>\n            </div>\n\n            {loading && <div className=\"loading\">Loading...</div>}\n            {error && <div className=\"error\">Error: {error}</div>}\n\n            {employeeData && employeeData.employeeSummaries && (\n                <div className=\"report-content\">\n                    <h3>Employee Work Summary</h3>\n                    {employeeData.employeeSummaries.length === 0 ? (\n                        <p>No employee hours data found for the selected date range.</p>\n                    ) : (\n                        <table className=\"report-table\">\n                            <thead>\n                                <tr>\n                                    <th>Employee ID</th>\n                                    <th>Employee Name</th>\n                                    <th>Employee Code</th>\n                                    <th>Total Hours</th>\n                                    <th>Total Days</th>\n                                    <th>Total Amount</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {employeeData.employeeSummaries.map((employee) => (\n                                    <React.Fragment key={employee.employeeId}>\n                                        <tr>\n                                            <td>{employee.employeeId}</td>\n                                            <td>{employee.employeeName}</td>\n                                            <td>{employee.empId}</td>\n                                            <td>{formatHours(employee.totalHours)}</td>\n                                            <td>{(employee.totalHours / 8).toFixed(1)}</td>\n                                            <td className=\"amount\">{formatCurrency(employee.totalAmount)}</td>\n                                            <td>\n                                                <button \n                                                    className=\"details-btn\"\n                                                    onClick={() => toggleEmployeeDetails(employee.employeeId)}\n                                                >\n                                                    {expandedEmployees.has(employee.employeeId) ? 'Hide' : 'View'} Projects\n                                                </button>\n                                            </td>\n                                        </tr>\n                                        {expandedEmployees.has(employee.employeeId) && (\n                                            <tr className=\"details-row\">\n                                                <td colSpan=\"7\">\n                                                    <div className=\"project-details\">\n                                                        <h4>Project Assignment Details</h4>\n                                                        <table className=\"sub-table\">\n                                                            <thead>\n                                                                <tr>\n                                                                    <th>Project ID</th>\n                                                                    <th>Project Description</th>\n                                                                    <th>Hours Worked</th>\n                                                                    <th>Days Worked</th>\n                                                                    <th>Daily Rate</th>\n                                                                    <th>Hourly Rate</th>\n                                                                    <th>Total Amount</th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                {employee.projectDetails && employee.projectDetails.map((project) => (\n                                                                    <tr key={project.projectId}>\n                                                                        <td>{project.projectId}</td>\n                                                                        <td>{project.projectDescription}</td>\n                                                                        <td>{formatHours(project.hoursWorked)}</td>\n                                                                        <td>{project.daysWorked}</td>\n                                                                        <td>{formatCurrency(project.dailyRate)}</td>\n                                                                        <td>{formatCurrency(project.hourlyRate)}</td>\n                                                                        <td className=\"amount\">{formatCurrency(project.totalAmount)}</td>\n                                                                    </tr>\n                                                                ))}\n                                                            </tbody>\n                                                            <tfoot>\n                                                                <tr className=\"sub-total-row\">\n                                                                    <td colSpan=\"2\"><strong>Project Totals</strong></td>\n                                                                    <td><strong>{formatHours(employee.totalHours)}</strong></td>\n                                                                    <td><strong>{(employee.totalHours / 8).toFixed(1)}</strong></td>\n                                                                    <td colSpan=\"2\"></td>\n                                                                    <td className=\"amount\"><strong>{formatCurrency(employee.totalAmount)}</strong></td>\n                                                                </tr>\n                                                            </tfoot>\n                                                        </table>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )}\n                                    </React.Fragment>\n                                ))}\n                            </tbody>\n                            <tfoot>\n                                <tr className=\"total-row\">\n                                    <td colSpan=\"3\"><strong>Grand Total</strong></td>\n                                    <td>\n                                        <strong>\n                                            {formatHours(\n                                                employeeData.employeeSummaries.reduce((sum, e) => sum + parseFloat(e.totalHours || 0), 0)\n                                            )}\n                                        </strong>\n                                    </td>\n                                    <td>\n                                        <strong>\n                                            {(employeeData.employeeSummaries.reduce((sum, e) => sum + parseFloat(e.totalHours || 0), 0) / 8).toFixed(1)}\n                                        </strong>\n                                    </td>\n                                    <td className=\"amount\">\n                                        <strong>\n                                            {formatCurrency(\n                                                employeeData.employeeSummaries.reduce((sum, e) => sum + parseFloat(e.totalAmount || 0), 0)\n                                            )}\n                                        </strong>\n                                    </td>\n                                    <td></td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default EmployeeHoursReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}